{"version":3,"file":"static/webpack/static/development/pages/index.js.8751531892af677e3b81.hot-update.js","sources":["webpack:///./util/index.js"],"sourcesContent":["\nconst computeUnion = (a1, a2) => {\n  let union = [];\n  a1.sort();\n  union.concat([], a1);\n  union = a2.eles.reduce((acc, i) => {\n    const index = binaryIndexOf(a1, i);\n    if(index === -1) {\n      acc.push(i);\n    }\n    return acc;\n  }, []);\n  a2.range.sort();\n  const lindex = binaryIndexOf(a1, a2.range[0]);\n  const hindex = binaryIndexOf(a1, a2.range[1]);\n  if(lindex !== -1 && hindex !== -1) {\n    return union;\n  } else if(lindex == -1) {\n\n  }\n\n};\n\nconst binaryIndexOf = (arry, searchElement) => {\n  'use strict';\n\n  var minIndex = 0;\n  var maxIndex = arry.length - 1;\n  var currentIndex;\n  var currentElement;\n\n  while (minIndex <= maxIndex) {\n    currentIndex = (minIndex + maxIndex) / 2 | 0;\n    currentElement = arry[currentIndex];\n\n    if (currentElement < searchElement) {\n      minIndex = currentIndex + 1;\n    }\n    else if (currentElement > searchElement) {\n      maxIndex = currentIndex - 1;\n    }\n    else {\n      return currentIndex;\n    }\n  }\n\n  return -1;\n};\n\nexport default {\n  binaryIndexOf,\n  compute,\n};\n"],"mappings":";;;;;;;;;;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;;;;A","sourceRoot":""}