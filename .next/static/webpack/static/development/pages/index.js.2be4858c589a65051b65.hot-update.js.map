{"version":3,"file":"static/webpack/static/development/pages/index.js.2be4858c589a65051b65.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { debounce } from 'lodash';\nimport uitls from '../util';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      arrayUserInput: '',\n      inputVal: '',\n      inputJS: [],\n    };\n    this.onInputChange = this.onInputChange.bind(this);\n    this.onArrayChange = this.onArrayChange.bind(this);\n    this.storeArray = debounce(this.storeArray.bind(this), 300);\n    this.compute = this.compute.bind(this);\n  }\n\n  onArrayChange(e) {\n    let arrayUserInput = e.target.value;\n    if((/^$|[\\d,]$/).test(arrayUserInput)) {\n      this.setState({\n        arrayUserInput,\n      });\n      this.storeArray(arrayUserInput);\n    }\n  }\n\n  storeArray(arrayUserInput) {\n    const arrayJS = arrayUserInput.split(',').filter((i) => i !== \"\").map((i) => parseInt(i));\n    this.setState({\n      arrayUserInput: arrayJS.join(','),\n      arrayJS,\n    });\n  }\n\n  onInputChange(e) {\n    const inputVal = e.target.value;\n    if ((/^$|[\\d,-]$/).test(inputVal)) {\n      const inputJS = inputVal.split(',').reduce((acc, i) => {\n        if(i !== '') {\n          if(i.indexOf('-') !== -1) {\n            acc.range.push(i.split('-').map((i) => parseInt(i)));\n          } else {\n            acc.eles.push(parseInt(i));\n          }\n        }\n        return acc;\n      }, {range: [], eles: [] });\n      this.setState({\n        inputVal,\n        inputJS,\n      });\n    }\n  }\n\n  compute() {\n    const { arrayJS, inputJS } = this.state;\n    uitls.computeUnion(arrayJS, inputJS.eles);\n    debugger;\n  }\n\n  render() {\n    const  { arrayError, arrayErrorMsg, inputVal, arrayUserInput } = this.state;\n    return (\n      <div>\n        <div>\n          <input type=\"text\" onChange={this.onArrayChange} value={arrayUserInput} />\n          {\n              arrayError ? <div>{arrayErrorMsg}</div> : null\n          }\n        </div>\n        <div>\n          <input type=\"text\" onChange={this.onInputChange} value={inputVal} />\n        </div>\n        <button onClick={this.compute}>compute</button>\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAVA;AAWA;AACA;;;AACA;AACA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;;;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AAIA;;;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;;;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AA1EA;AACA;AA6EA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}